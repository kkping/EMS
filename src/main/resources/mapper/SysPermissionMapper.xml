<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ems.mapper.SysPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.ems.entity.SysPermission" >
    <constructor >
      <idArg column="p_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_desc" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    p_id, parent_id, type, p_name, p_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_permission
    where p_id = #{pId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_permission
    where p_id = #{pId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ems.entity.SysPermission" >
    insert into sys_permission (p_id, parent_id, type, 
      p_name, p_desc)
    values (#{pId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{pName,jdbcType=VARCHAR}, #{pDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ems.entity.SysPermission" >
    insert into sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pId != null" >
        p_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pName != null" >
        p_name,
      </if>
      <if test="pDesc != null" >
        p_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="pName != null" >
        #{pName,jdbcType=VARCHAR},
      </if>
      <if test="pDesc != null" >
        #{pDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ems.entity.SysPermission" >
    update sys_permission
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="pName != null" >
        p_name = #{pName,jdbcType=VARCHAR},
      </if>
      <if test="pDesc != null" >
        p_desc = #{pDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where p_id = #{pId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ems.entity.SysPermission" >
    update sys_permission
    set parent_id = #{parentId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      p_name = #{pName,jdbcType=VARCHAR},
      p_desc = #{pDesc,jdbcType=VARCHAR}
    where p_id = #{pId,jdbcType=INTEGER}
  </update>

  <!--追加的-->
  <select id="queryMenuByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
SELECT
sys_permission.p_id,
sys_permission.parent_id,
sys_permission.type,
sys_permission.p_name,
sys_permission.p_desc
FROM
sys_employee_role
INNER JOIN sys_role_permission ON sys_employee_role.r_id = sys_role_permission.r_id
INNER JOIN sys_permission ON sys_role_permission.p_id = sys_permission.p_id
WHERE sys_employee_role.e_id=#{employeeId} AND sys_permission.type='menu'
  </select>
  <select id="queryPermissionByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
SELECT
sys_permission.p_id,
sys_permission.parent_id,
sys_permission.type,
sys_permission.p_name,
sys_permission.p_desc
FROM
sys_employee_role
INNER JOIN sys_role_permission ON sys_employee_role.r_id = sys_role_permission.r_id
INNER JOIN sys_permission ON sys_role_permission.p_id = sys_permission.p_id
WHERE sys_employee_role.e_id=#{employeeId} AND sys_permission.type='permission'
    </select>
  <select id="queryPermissionByrId" resultType="com.ems.entity.SysPermission">
    SELECT
    sys_permission.p_id,
    sys_permission.parent_id,
    sys_permission.type,
    sys_permission.p_name,
    sys_permission.p_desc,
    sys_role_permission.r_id
    FROM
    sys_role_permission
    INNER JOIN sys_permission ON sys_role_permission.P_id = sys_permission.p_id
    WHERE
    sys_role_permission.r_id = #{rId}
  </select>
    <select id="queryAll" resultType="com.ems.entity.SysPermission">
      SELECT * FROM sys_permission
    </select>
</mapper>